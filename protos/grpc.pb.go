// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc.proto

/*
Package protos is a generated protocol buffer package.

It is generated from these files:
	grpc.proto

It has these top-level messages:
	GrpcMessage
*/
package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GrpcMessage struct {
	Cid   int32  `protobuf:"varint,1,opt,name=cid" json:"cid,omitempty"`
	Cmd   int32  `protobuf:"varint,2,opt,name=cmd" json:"cmd,omitempty"`
	N     int32  `protobuf:"varint,3,opt,name=n" json:"n,omitempty"`
	T     int32  `protobuf:"varint,4,opt,name=t" json:"t,omitempty"`
	Route string `protobuf:"bytes,5,opt,name=route" json:"route,omitempty"`
	Data  []byte `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *GrpcMessage) Reset()                    { *m = GrpcMessage{} }
func (m *GrpcMessage) String() string            { return proto.CompactTextString(m) }
func (*GrpcMessage) ProtoMessage()               {}
func (*GrpcMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GrpcMessage) GetCid() int32 {
	if m != nil {
		return m.Cid
	}
	return 0
}

func (m *GrpcMessage) GetCmd() int32 {
	if m != nil {
		return m.Cmd
	}
	return 0
}

func (m *GrpcMessage) GetN() int32 {
	if m != nil {
		return m.N
	}
	return 0
}

func (m *GrpcMessage) GetT() int32 {
	if m != nil {
		return m.T
	}
	return 0
}

func (m *GrpcMessage) GetRoute() string {
	if m != nil {
		return m.Route
	}
	return ""
}

func (m *GrpcMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*GrpcMessage)(nil), "protos.GrpcMessage")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for GrpcService service

type GrpcServiceClient interface {
	MService(ctx context.Context, opts ...grpc.CallOption) (GrpcService_MServiceClient, error)
}

type grpcServiceClient struct {
	cc *grpc.ClientConn
}

func NewGrpcServiceClient(cc *grpc.ClientConn) GrpcServiceClient {
	return &grpcServiceClient{cc}
}

func (c *grpcServiceClient) MService(ctx context.Context, opts ...grpc.CallOption) (GrpcService_MServiceClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_GrpcService_serviceDesc.Streams[0], c.cc, "/protos.GrpcService/MService", opts...)
	if err != nil {
		return nil, err
	}
	x := &grpcServiceMServiceClient{stream}
	return x, nil
}

type GrpcService_MServiceClient interface {
	Send(*GrpcMessage) error
	Recv() (*GrpcMessage, error)
	grpc.ClientStream
}

type grpcServiceMServiceClient struct {
	grpc.ClientStream
}

func (x *grpcServiceMServiceClient) Send(m *GrpcMessage) error {
	return x.ClientStream.SendMsg(m)
}

func (x *grpcServiceMServiceClient) Recv() (*GrpcMessage, error) {
	m := new(GrpcMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for GrpcService service

type GrpcServiceServer interface {
	MService(GrpcService_MServiceServer) error
}

func RegisterGrpcServiceServer(s *grpc.Server, srv GrpcServiceServer) {
	s.RegisterService(&_GrpcService_serviceDesc, srv)
}

func _GrpcService_MService_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GrpcServiceServer).MService(&grpcServiceMServiceServer{stream})
}

type GrpcService_MServiceServer interface {
	Send(*GrpcMessage) error
	Recv() (*GrpcMessage, error)
	grpc.ServerStream
}

type grpcServiceMServiceServer struct {
	grpc.ServerStream
}

func (x *grpcServiceMServiceServer) Send(m *GrpcMessage) error {
	return x.ServerStream.SendMsg(m)
}

func (x *grpcServiceMServiceServer) Recv() (*GrpcMessage, error) {
	m := new(GrpcMessage)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _GrpcService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.GrpcService",
	HandlerType: (*GrpcServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "MService",
			Handler:       _GrpcService_MService_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "grpc.proto",
}

func init() { proto.RegisterFile("grpc.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 173 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0x2f, 0x2a, 0x48,
	0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x03, 0x53, 0xc5, 0x4a, 0xe5, 0x5c, 0xdc, 0xee,
	0x45, 0x05, 0xc9, 0xbe, 0xa9, 0xc5, 0xc5, 0x89, 0xe9, 0xa9, 0x42, 0x02, 0x5c, 0xcc, 0xc9, 0x99,
	0x29, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0xac, 0x41, 0x20, 0x26, 0x58, 0x24, 0x37, 0x45, 0x82, 0x09,
	0x2a, 0x92, 0x9b, 0x22, 0xc4, 0xc3, 0xc5, 0x98, 0x27, 0xc1, 0x0c, 0xe6, 0x33, 0xe6, 0x81, 0x78,
	0x25, 0x12, 0x2c, 0x10, 0x5e, 0x89, 0x90, 0x08, 0x17, 0x6b, 0x51, 0x7e, 0x69, 0x49, 0xaa, 0x04,
	0xab, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x84, 0x23, 0x24, 0xc4, 0xc5, 0x92, 0x92, 0x58, 0x92, 0x28,
	0xc1, 0xa6, 0xc0, 0xa8, 0xc1, 0x13, 0x04, 0x66, 0x1b, 0x79, 0x42, 0x2c, 0x0e, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0x15, 0xb2, 0xe2, 0xe2, 0xf0, 0x85, 0xb1, 0x85, 0x21, 0x6e, 0x2c, 0xd6, 0x43,
	0x72, 0x99, 0x14, 0x36, 0x41, 0x25, 0x06, 0x0d, 0x46, 0x03, 0xc6, 0x24, 0x88, 0x5f, 0x8c, 0x01,
	0x01, 0x00, 0x00, 0xff, 0xff, 0xe6, 0xd8, 0xa2, 0x00, 0xe0, 0x00, 0x00, 0x00,
}
